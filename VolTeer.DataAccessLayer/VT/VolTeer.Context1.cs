//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VolTeer.DataAccessLayer.VT
{
    
    using System;
    using System.Data;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class VolTeerEntities : DbContext
    {
        public VolTeerEntities()
            : base("name=VolTeerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<tblContact> tblContacts { get; set; }
        public DbSet<tblContactEmail> tblContactEmails { get; set; }
        public DbSet<tblEventRating> tblEventRatings { get; set; }
        public DbSet<tblProject> tblProjects { get; set; }
        public DbSet<tblProjectEvent> tblProjectEvents { get; set; }
        public DbSet<tblProjectEventContact> tblProjectEventContacts { get; set; }
        public DbSet<tblVendAddress> tblVendAddresses { get; set; }
        public DbSet<tblVendContact> tblVendContacts { get; set; }
        public DbSet<tblVendEmail> tblVendEmails { get; set; }
        public DbSet<tblVendor> tblVendors { get; set; }
        public DbSet<tblVendorAddr> tblVendorAddrs { get; set; }
        public DbSet<tblVendorProjContact> tblVendorProjContacts { get; set; }
        public DbSet<tblSampleAddress> tblSampleAddresses { get; set; }
        public DbSet<tblVolState> tblVolStates { get; set; }
        public DbSet<tblVolunteer> tblVolunteers { get; set; }
        public DbSet<tblAvailability> tblAvailabilities { get; set; }
        public DbSet<tblVolAddr> tblVolAddrs { get; set; }
        public DbSet<tblVolAddress> tblVolAddresses { get; set; }
        public DbSet<tblVendState> tblVendStates { get; set; }
        public DbSet<tblSkill> tblSkills { get; set; }
        public DbSet<tblVolPhone> tblVolPhones { get; set; }
        public DbSet<tblGroupVol> tblGroupVols { get; set; }
        public DbSet<tblVolEmail> tblVolEmails { get; set; }
        public DbSet<Vend_tblUserCred> Vend_tblUserCred { get; set; }
        public DbSet<ControlProperty> ControlProperties { get; set; }
        public DbSet<Order> Orders { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<RegisteredControl> RegisteredControls { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<tblGroupAddr> tblGroupAddrs { get; set; }
        public DbSet<tblGroup> tblGroups { get; set; }
    
        public virtual int sp_Contact_Delete(Nullable<System.Guid> contactID)
        {
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_Delete", contactIDParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> sp_Contact_Insert(string contactFirstName, string contactMiddleName, string contactLastName)
        {
            var contactFirstNameParameter = contactFirstName != null ?
                new ObjectParameter("ContactFirstName", contactFirstName) :
                new ObjectParameter("ContactFirstName", typeof(string));
    
            var contactMiddleNameParameter = contactMiddleName != null ?
                new ObjectParameter("ContactMiddleName", contactMiddleName) :
                new ObjectParameter("ContactMiddleName", typeof(string));
    
            var contactLastNameParameter = contactLastName != null ?
                new ObjectParameter("ContactLastName", contactLastName) :
                new ObjectParameter("ContactLastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("sp_Contact_Insert", contactFirstNameParameter, contactMiddleNameParameter, contactLastNameParameter);
        }
    
        public virtual int sp_Contact_MassUpdate(string xML_IN)
        {
            var xML_INParameter = xML_IN != null ?
                new ObjectParameter("XML_IN", xML_IN) :
                new ObjectParameter("XML_IN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_MassUpdate", xML_INParameter);
        }
    
        public virtual ObjectResult<sp_Contact_Select_Result> sp_Contact_Select(Nullable<System.Guid> contactID)
        {
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Contact_Select_Result>("sp_Contact_Select", contactIDParameter);
        }
    
        public virtual int sp_Contact_Update(Nullable<System.Guid> contactID, string contactFirstName, string contactMiddleName, string contactLastName, Nullable<bool> activeFlg)
        {
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(System.Guid));
    
            var contactFirstNameParameter = contactFirstName != null ?
                new ObjectParameter("ContactFirstName", contactFirstName) :
                new ObjectParameter("ContactFirstName", typeof(string));
    
            var contactMiddleNameParameter = contactMiddleName != null ?
                new ObjectParameter("ContactMiddleName", contactMiddleName) :
                new ObjectParameter("ContactMiddleName", typeof(string));
    
            var contactLastNameParameter = contactLastName != null ?
                new ObjectParameter("ContactLastName", contactLastName) :
                new ObjectParameter("ContactLastName", typeof(string));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_Update", contactIDParameter, contactFirstNameParameter, contactMiddleNameParameter, contactLastNameParameter, activeFlgParameter);
        }
    
        public virtual int sp_EventRating_Delete(Nullable<int> ratingID, Nullable<System.Guid> eventID)
        {
            var ratingIDParameter = ratingID.HasValue ?
                new ObjectParameter("RatingID", ratingID) :
                new ObjectParameter("RatingID", typeof(int));
    
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EventRating_Delete", ratingIDParameter, eventIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_EventRating_Insert(Nullable<System.Guid> eventID, Nullable<System.Guid> volID, Nullable<int> ratingValue, Nullable<bool> activeFlg)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(System.Guid));
    
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            var ratingValueParameter = ratingValue.HasValue ?
                new ObjectParameter("RatingValue", ratingValue) :
                new ObjectParameter("RatingValue", typeof(int));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_EventRating_Insert", eventIDParameter, volIDParameter, ratingValueParameter, activeFlgParameter);
        }
    
        public virtual int sp_EventRating_MassUpdate(string xML_IN)
        {
            var xML_INParameter = xML_IN != null ?
                new ObjectParameter("XML_IN", xML_IN) :
                new ObjectParameter("XML_IN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EventRating_MassUpdate", xML_INParameter);
        }
    
        public virtual ObjectResult<sp_EventRating_Select_Result> sp_EventRating_Select(Nullable<int> ratingID, Nullable<System.Guid> eventID)
        {
            var ratingIDParameter = ratingID.HasValue ?
                new ObjectParameter("RatingID", ratingID) :
                new ObjectParameter("RatingID", typeof(int));
    
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EventRating_Select_Result>("sp_EventRating_Select", ratingIDParameter, eventIDParameter);
        }
    
        public virtual int sp_EventRating_Update(Nullable<int> ratingID, Nullable<System.Guid> eventID, Nullable<System.Guid> volID, Nullable<int> ratingValue, Nullable<bool> activeFlg)
        {
            var ratingIDParameter = ratingID.HasValue ?
                new ObjectParameter("RatingID", ratingID) :
                new ObjectParameter("RatingID", typeof(int));
    
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(System.Guid));
    
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            var ratingValueParameter = ratingValue.HasValue ?
                new ObjectParameter("RatingValue", ratingValue) :
                new ObjectParameter("RatingValue", typeof(int));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EventRating_Update", ratingIDParameter, eventIDParameter, volIDParameter, ratingValueParameter, activeFlgParameter);
        }
    
        public virtual int sp_Project_Delete(Nullable<System.Guid> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Project_Delete", projectIDParameter);
        }
    
        public virtual int sp_Project_Insert(string projectName, string projectDesc, Nullable<int> addrID, Nullable<int> activeFlg)
        {
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var projectDescParameter = projectDesc != null ?
                new ObjectParameter("ProjectDesc", projectDesc) :
                new ObjectParameter("ProjectDesc", typeof(string));
    
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Project_Insert", projectNameParameter, projectDescParameter, addrIDParameter, activeFlgParameter);
        }
    
        public virtual ObjectResult<sp_Project_Select_Result> sp_Project_Select(Nullable<System.Guid> projectID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Project_Select_Result>("sp_Project_Select", projectIDParameter);
        }
    
        public virtual int sp_Project_Update(ObjectParameter flag, Nullable<System.Guid> projectID, string projectName, string projectDesc, Nullable<int> addrID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(System.Guid));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var projectDescParameter = projectDesc != null ?
                new ObjectParameter("ProjectDesc", projectDesc) :
                new ObjectParameter("ProjectDesc", typeof(string));
    
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Project_Update", flag, projectIDParameter, projectNameParameter, projectDescParameter, addrIDParameter);
        }
    
        public virtual int sp_Vend_Address_Delete(Nullable<int> addrID)
        {
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vend_Address_Delete", addrIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Vend_Address_Insert(string addrLine1, string addrLine2, string addrLine3, string city, string st, Nullable<int> zip, Nullable<int> zip4, string geoCodeGetSet, Nullable<bool> activeFlg)
        {
            var addrLine1Parameter = addrLine1 != null ?
                new ObjectParameter("AddrLine1", addrLine1) :
                new ObjectParameter("AddrLine1", typeof(string));
    
            var addrLine2Parameter = addrLine2 != null ?
                new ObjectParameter("AddrLine2", addrLine2) :
                new ObjectParameter("AddrLine2", typeof(string));
    
            var addrLine3Parameter = addrLine3 != null ?
                new ObjectParameter("AddrLine3", addrLine3) :
                new ObjectParameter("AddrLine3", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stParameter = st != null ?
                new ObjectParameter("St", st) :
                new ObjectParameter("St", typeof(string));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(int));
    
            var zip4Parameter = zip4.HasValue ?
                new ObjectParameter("Zip4", zip4) :
                new ObjectParameter("Zip4", typeof(int));
    
            var geoCodeGetSetParameter = geoCodeGetSet != null ?
                new ObjectParameter("GeoCodeGetSet", geoCodeGetSet) :
                new ObjectParameter("GeoCodeGetSet", typeof(string));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Vend_Address_Insert", addrLine1Parameter, addrLine2Parameter, addrLine3Parameter, cityParameter, stParameter, zipParameter, zip4Parameter, geoCodeGetSetParameter, activeFlgParameter);
        }
    
        public virtual int sp_Vend_Address_MassUpdate(string xML_IN)
        {
            var xML_INParameter = xML_IN != null ?
                new ObjectParameter("XML_IN", xML_IN) :
                new ObjectParameter("XML_IN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vend_Address_MassUpdate", xML_INParameter);
        }
    
        public virtual ObjectResult<sp_Vend_Address_Select_Result> sp_Vend_Address_Select(Nullable<int> addrID)
        {
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Vend_Address_Select_Result>("sp_Vend_Address_Select", addrIDParameter);
        }
    
        public virtual int sp_Vend_Address_Update(Nullable<int> addrId, Nullable<bool> activeFlg, string addrLine1, string addrLine2, string addrLine3, string city, string st, Nullable<int> zip, Nullable<int> zip4, string geoCodeGetSet)
        {
            var addrIdParameter = addrId.HasValue ?
                new ObjectParameter("AddrId", addrId) :
                new ObjectParameter("AddrId", typeof(int));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            var addrLine1Parameter = addrLine1 != null ?
                new ObjectParameter("AddrLine1", addrLine1) :
                new ObjectParameter("AddrLine1", typeof(string));
    
            var addrLine2Parameter = addrLine2 != null ?
                new ObjectParameter("AddrLine2", addrLine2) :
                new ObjectParameter("AddrLine2", typeof(string));
    
            var addrLine3Parameter = addrLine3 != null ?
                new ObjectParameter("AddrLine3", addrLine3) :
                new ObjectParameter("AddrLine3", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stParameter = st != null ?
                new ObjectParameter("St", st) :
                new ObjectParameter("St", typeof(string));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(int));
    
            var zip4Parameter = zip4.HasValue ?
                new ObjectParameter("Zip4", zip4) :
                new ObjectParameter("Zip4", typeof(int));
    
            var geoCodeGetSetParameter = geoCodeGetSet != null ?
                new ObjectParameter("GeoCodeGetSet", geoCodeGetSet) :
                new ObjectParameter("GeoCodeGetSet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vend_Address_Update", addrIdParameter, activeFlgParameter, addrLine1Parameter, addrLine2Parameter, addrLine3Parameter, cityParameter, stParameter, zipParameter, zip4Parameter, geoCodeGetSetParameter);
        }
    
        public virtual int sp_Vend_Email_Insert(Nullable<int> emailID, string emailAddr, Nullable<bool> activeFlg)
        {
            var emailIDParameter = emailID.HasValue ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(int));
    
            var emailAddrParameter = emailAddr != null ?
                new ObjectParameter("EmailAddr", emailAddr) :
                new ObjectParameter("EmailAddr", typeof(string));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vend_Email_Insert", emailIDParameter, emailAddrParameter, activeFlgParameter);
        }
    
        public virtual int sp_Vend_Email_MassUpdate(string xML_IN)
        {
            var xML_INParameter = xML_IN != null ?
                new ObjectParameter("XML_IN", xML_IN) :
                new ObjectParameter("XML_IN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vend_Email_MassUpdate", xML_INParameter);
        }
    
        public virtual ObjectResult<sp_Vend_Email_Select_Result> sp_Vend_Email_Select(Nullable<int> emailID, Nullable<bool> activeFlg)
        {
            var emailIDParameter = emailID.HasValue ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(int));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Vend_Email_Select_Result>("sp_Vend_Email_Select", emailIDParameter, activeFlgParameter);
        }
    
        public virtual int sp_Vend_Email_Update(Nullable<int> emailID, string emailAddr, Nullable<bool> activeFlg)
        {
            var emailIDParameter = emailID.HasValue ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(int));
    
            var emailAddrParameter = emailAddr != null ?
                new ObjectParameter("EmailAddr", emailAddr) :
                new ObjectParameter("EmailAddr", typeof(string));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vend_Email_Update", emailIDParameter, emailAddrParameter, activeFlgParameter);
        }
    
        public virtual int sp_Vendor_Delete(Nullable<System.Guid> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vendor_Delete", vendorIDParameter);
        }
    
        public virtual int sp_Vendor_Select(Nullable<System.Guid> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vendor_Select", vendorIDParameter);
        }
    
        public virtual int sp_Sample_Address_Delete(Nullable<int> addrID)
        {
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Sample_Address_Delete", addrIDParameter);
        }
    
        public virtual int sp_Sample_Address_Insert(string addrLine1, string addrLine2, string addrLine3, string city, string st, Nullable<int> zip, Nullable<int> zip4, Nullable<bool> activeFlg)
        {
            var addrLine1Parameter = addrLine1 != null ?
                new ObjectParameter("AddrLine1", addrLine1) :
                new ObjectParameter("AddrLine1", typeof(string));
    
            var addrLine2Parameter = addrLine2 != null ?
                new ObjectParameter("AddrLine2", addrLine2) :
                new ObjectParameter("AddrLine2", typeof(string));
    
            var addrLine3Parameter = addrLine3 != null ?
                new ObjectParameter("AddrLine3", addrLine3) :
                new ObjectParameter("AddrLine3", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stParameter = st != null ?
                new ObjectParameter("St", st) :
                new ObjectParameter("St", typeof(string));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(int));
    
            var zip4Parameter = zip4.HasValue ?
                new ObjectParameter("Zip4", zip4) :
                new ObjectParameter("Zip4", typeof(int));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Sample_Address_Insert", addrLine1Parameter, addrLine2Parameter, addrLine3Parameter, cityParameter, stParameter, zipParameter, zip4Parameter, activeFlgParameter);
        }
    
        public virtual ObjectResult<sp_Sample_Address_Select_Result> sp_Sample_Address_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Sample_Address_Select_Result>("sp_Sample_Address_Select");
        }
    
        public virtual int sp_Sample_Address_Update(Nullable<int> addrID, string addrLine1, string addrLine2, string addrLine3, string city, string st, Nullable<int> zip, Nullable<int> zip4, Nullable<bool> activeFlg)
        {
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            var addrLine1Parameter = addrLine1 != null ?
                new ObjectParameter("AddrLine1", addrLine1) :
                new ObjectParameter("AddrLine1", typeof(string));
    
            var addrLine2Parameter = addrLine2 != null ?
                new ObjectParameter("AddrLine2", addrLine2) :
                new ObjectParameter("AddrLine2", typeof(string));
    
            var addrLine3Parameter = addrLine3 != null ?
                new ObjectParameter("AddrLine3", addrLine3) :
                new ObjectParameter("AddrLine3", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stParameter = st != null ?
                new ObjectParameter("St", st) :
                new ObjectParameter("St", typeof(string));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(int));
    
            var zip4Parameter = zip4.HasValue ?
                new ObjectParameter("Zip4", zip4) :
                new ObjectParameter("Zip4", typeof(int));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Sample_Address_Update", addrIDParameter, addrLine1Parameter, addrLine2Parameter, addrLine3Parameter, cityParameter, stParameter, zipParameter, zip4Parameter, activeFlgParameter);
        }
    
        public virtual int sp_Skill_Delete(Nullable<System.Guid> skillID)
        {
            var skillIDParameter = skillID.HasValue ?
                new ObjectParameter("SkillID", skillID) :
                new ObjectParameter("SkillID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Skill_Delete", skillIDParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> sp_Skill_Insert(string skillName, Nullable<System.Guid> mstrSkillID, Nullable<bool> reqCert)
        {
            var skillNameParameter = skillName != null ?
                new ObjectParameter("SkillName", skillName) :
                new ObjectParameter("SkillName", typeof(string));
    
            var mstrSkillIDParameter = mstrSkillID.HasValue ?
                new ObjectParameter("MstrSkillID", mstrSkillID) :
                new ObjectParameter("MstrSkillID", typeof(System.Guid));
    
            var reqCertParameter = reqCert.HasValue ?
                new ObjectParameter("ReqCert", reqCert) :
                new ObjectParameter("ReqCert", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("sp_Skill_Insert", skillNameParameter, mstrSkillIDParameter, reqCertParameter);
        }
    
        public virtual ObjectResult<sp_Skill_Select_Result> sp_Skill_Select(Nullable<System.Guid> skillID)
        {
            var skillIDParameter = skillID.HasValue ?
                new ObjectParameter("SkillID", skillID) :
                new ObjectParameter("SkillID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Skill_Select_Result>("sp_Skill_Select", skillIDParameter);
        }
    
        public virtual int sp_Skill_Update(Nullable<System.Guid> skillID, string skillName, Nullable<System.Guid> mstrSkillID, Nullable<bool> reqCert)
        {
            var skillIDParameter = skillID.HasValue ?
                new ObjectParameter("SkillID", skillID) :
                new ObjectParameter("SkillID", typeof(System.Guid));
    
            var skillNameParameter = skillName != null ?
                new ObjectParameter("SkillName", skillName) :
                new ObjectParameter("SkillName", typeof(string));
    
            var mstrSkillIDParameter = mstrSkillID.HasValue ?
                new ObjectParameter("MstrSkillID", mstrSkillID) :
                new ObjectParameter("MstrSkillID", typeof(System.Guid));
    
            var reqCertParameter = reqCert.HasValue ?
                new ObjectParameter("ReqCert", reqCert) :
                new ObjectParameter("ReqCert", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Skill_Update", skillIDParameter, skillNameParameter, mstrSkillIDParameter, reqCertParameter);
        }
    
        public virtual ObjectResult<sp_Availability_Select_Result> sp_Availability_Select(Nullable<System.Guid> volID, Nullable<int> addrID)
        {
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Availability_Select_Result>("sp_Availability_Select", volIDParameter, addrIDParameter);
        }
    
        public virtual int sp_Vol_Email_Delete(Nullable<int> emailID, Nullable<System.Guid> volID, string emailAddr, Nullable<bool> activeFlg, Nullable<bool> primaryFlg)
        {
            var emailIDParameter = emailID.HasValue ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(int));
    
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            var emailAddrParameter = emailAddr != null ?
                new ObjectParameter("EmailAddr", emailAddr) :
                new ObjectParameter("EmailAddr", typeof(string));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            var primaryFlgParameter = primaryFlg.HasValue ?
                new ObjectParameter("PrimaryFlg", primaryFlg) :
                new ObjectParameter("PrimaryFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vol_Email_Delete", emailIDParameter, volIDParameter, emailAddrParameter, activeFlgParameter, primaryFlgParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Vol_Email_Insert(Nullable<System.Guid> volID, string emailAddr, Nullable<bool> activeFlg, Nullable<bool> primaryFlg)
        {
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            var emailAddrParameter = emailAddr != null ?
                new ObjectParameter("EmailAddr", emailAddr) :
                new ObjectParameter("EmailAddr", typeof(string));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            var primaryFlgParameter = primaryFlg.HasValue ?
                new ObjectParameter("PrimaryFlg", primaryFlg) :
                new ObjectParameter("PrimaryFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Vol_Email_Insert", volIDParameter, emailAddrParameter, activeFlgParameter, primaryFlgParameter);
        }
    
        public virtual int sp_Vol_Email_Update(Nullable<int> emailID, Nullable<System.Guid> volID, string emailAddr, Nullable<bool> activeFlg, Nullable<bool> primaryFlg)
        {
            var emailIDParameter = emailID.HasValue ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(int));
    
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            var emailAddrParameter = emailAddr != null ?
                new ObjectParameter("EmailAddr", emailAddr) :
                new ObjectParameter("EmailAddr", typeof(string));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            var primaryFlgParameter = primaryFlg.HasValue ?
                new ObjectParameter("PrimaryFlg", primaryFlg) :
                new ObjectParameter("PrimaryFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vol_Email_Update", emailIDParameter, volIDParameter, emailAddrParameter, activeFlgParameter, primaryFlgParameter);
        }
    
        public virtual ObjectResult<sp_Vol_State_Select_Result> sp_Vol_State_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Vol_State_Select_Result>("sp_Vol_State_Select");
        }
    
        public virtual int sp_Volunteer_Delete(Nullable<System.Guid> volID)
        {
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Volunteer_Delete", volIDParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> sp_Volunteer_Insert(Nullable<System.Guid> volID, string volFirstName, string volMiddleName, string volLastName)
        {
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            var volFirstNameParameter = volFirstName != null ?
                new ObjectParameter("VolFirstName", volFirstName) :
                new ObjectParameter("VolFirstName", typeof(string));
    
            var volMiddleNameParameter = volMiddleName != null ?
                new ObjectParameter("VolMiddleName", volMiddleName) :
                new ObjectParameter("VolMiddleName", typeof(string));
    
            var volLastNameParameter = volLastName != null ?
                new ObjectParameter("VolLastName", volLastName) :
                new ObjectParameter("VolLastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("sp_Volunteer_Insert", volIDParameter, volFirstNameParameter, volMiddleNameParameter, volLastNameParameter);
        }
    
        public virtual ObjectResult<sp_Volunteer_Select_Result> sp_Volunteer_Select(Nullable<System.Guid> volID)
        {
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Volunteer_Select_Result>("sp_Volunteer_Select", volIDParameter);
        }
    
        public virtual int sp_Volunteer_Update(Nullable<System.Guid> volID, Nullable<bool> activeFlg, string volFirstName, string volMiddleName, string volLastName)
        {
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            var volFirstNameParameter = volFirstName != null ?
                new ObjectParameter("VolFirstName", volFirstName) :
                new ObjectParameter("VolFirstName", typeof(string));
    
            var volMiddleNameParameter = volMiddleName != null ?
                new ObjectParameter("VolMiddleName", volMiddleName) :
                new ObjectParameter("VolMiddleName", typeof(string));
    
            var volLastNameParameter = volLastName != null ?
                new ObjectParameter("VolLastName", volLastName) :
                new ObjectParameter("VolLastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Volunteer_Update", volIDParameter, activeFlgParameter, volFirstNameParameter, volMiddleNameParameter, volLastNameParameter);
        }
    
        public virtual int sp_Vol_Addr_Delete(Nullable<System.Guid> volID, Nullable<int> addrID)
        {
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vol_Addr_Delete", volIDParameter, addrIDParameter);
        }
    
        public virtual int sp_Vol_Addr_Insert(Nullable<System.Guid> volID, Nullable<int> addrID, Nullable<bool> primaryAddr)
        {
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            var primaryAddrParameter = primaryAddr.HasValue ?
                new ObjectParameter("PrimaryAddr", primaryAddr) :
                new ObjectParameter("PrimaryAddr", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vol_Addr_Insert", volIDParameter, addrIDParameter, primaryAddrParameter);
        }
    
        public virtual int sp_Vol_Address_Delete(Nullable<int> addrID)
        {
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vol_Address_Delete", addrIDParameter);
        }
    
        public virtual int sp_Vol_Address_MassUpdate(string xML_IN)
        {
            var xML_INParameter = xML_IN != null ?
                new ObjectParameter("XML_IN", xML_IN) :
                new ObjectParameter("XML_IN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vol_Address_MassUpdate", xML_INParameter);
        }
    
        public virtual ObjectResult<sp_Vol_Address_Select_Result> sp_Vol_Address_Select(Nullable<System.Guid> volID, Nullable<int> addrID, Nullable<bool> primaryAddr)
        {
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            var primaryAddrParameter = primaryAddr.HasValue ?
                new ObjectParameter("PrimaryAddr", primaryAddr) :
                new ObjectParameter("PrimaryAddr", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Vol_Address_Select_Result>("sp_Vol_Address_Select", volIDParameter, addrIDParameter, primaryAddrParameter);
        }
    
        public virtual int sp_Vol_Address_Update(Nullable<int> addrId, Nullable<bool> activeFlg, string addrLine1, string addrLine2, string addrLine3, string city, string st, Nullable<int> zip, Nullable<int> zip4, string geoCodeGetSet)
        {
            var addrIdParameter = addrId.HasValue ?
                new ObjectParameter("AddrId", addrId) :
                new ObjectParameter("AddrId", typeof(int));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            var addrLine1Parameter = addrLine1 != null ?
                new ObjectParameter("AddrLine1", addrLine1) :
                new ObjectParameter("AddrLine1", typeof(string));
    
            var addrLine2Parameter = addrLine2 != null ?
                new ObjectParameter("AddrLine2", addrLine2) :
                new ObjectParameter("AddrLine2", typeof(string));
    
            var addrLine3Parameter = addrLine3 != null ?
                new ObjectParameter("AddrLine3", addrLine3) :
                new ObjectParameter("AddrLine3", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stParameter = st != null ?
                new ObjectParameter("St", st) :
                new ObjectParameter("St", typeof(string));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(int));
    
            var zip4Parameter = zip4.HasValue ?
                new ObjectParameter("Zip4", zip4) :
                new ObjectParameter("Zip4", typeof(int));
    
            var geoCodeGetSetParameter = geoCodeGetSet != null ?
                new ObjectParameter("GeoCodeGetSet", geoCodeGetSet) :
                new ObjectParameter("GeoCodeGetSet", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vol_Address_Update", addrIdParameter, activeFlgParameter, addrLine1Parameter, addrLine2Parameter, addrLine3Parameter, cityParameter, stParameter, zipParameter, zip4Parameter, geoCodeGetSetParameter);
        }
    
        public virtual int sp_Vol_Addr_Update(Nullable<System.Guid> volID, Nullable<int> addrID, Nullable<bool> primaryAddr)
        {
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            var primaryAddrParameter = primaryAddr.HasValue ?
                new ObjectParameter("PrimaryAddr", primaryAddr) :
                new ObjectParameter("PrimaryAddr", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vol_Addr_Update", volIDParameter, addrIDParameter, primaryAddrParameter);
        }
    
        public virtual int sp_VolSkill_DeleteAll(Nullable<System.Guid> volID)
        {
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VolSkill_DeleteAll", volIDParameter);
        }
    
        public virtual int sp_VolSkill_Insert(Nullable<System.Guid> volID, Nullable<System.Guid> skillID)
        {
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            var skillIDParameter = skillID.HasValue ?
                new ObjectParameter("SkillID", skillID) :
                new ObjectParameter("SkillID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VolSkill_Insert", volIDParameter, skillIDParameter);
        }
    
        public virtual ObjectResult<sp_VolSkill_Select_Result> sp_VolSkill_Select(Nullable<System.Guid> volID)
        {
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VolSkill_Select_Result>("sp_VolSkill_Select", volIDParameter);
        }
    
        public virtual ObjectResult<sp_Vol_Email_Select_Result> sp_Vol_Email_Select(Nullable<System.Guid> volID, Nullable<int> emailID, Nullable<bool> primaryFlg)
        {
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            var emailIDParameter = emailID.HasValue ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(int));
    
            var primaryFlgParameter = primaryFlg.HasValue ?
                new ObjectParameter("PrimaryFlg", primaryFlg) :
                new ObjectParameter("PrimaryFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Vol_Email_Select_Result>("sp_Vol_Email_Select", volIDParameter, emailIDParameter, primaryFlgParameter);
        }
    
        public virtual int sp_Vol_Phone_Update(Nullable<int> phoneID, string phoneNbr, Nullable<bool> activeFlg, Nullable<bool> primaryFlg)
        {
            var phoneIDParameter = phoneID.HasValue ?
                new ObjectParameter("PhoneID", phoneID) :
                new ObjectParameter("PhoneID", typeof(int));
    
            var phoneNbrParameter = phoneNbr != null ?
                new ObjectParameter("PhoneNbr", phoneNbr) :
                new ObjectParameter("PhoneNbr", typeof(string));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            var primaryFlgParameter = primaryFlg.HasValue ?
                new ObjectParameter("PrimaryFlg", primaryFlg) :
                new ObjectParameter("PrimaryFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vol_Phone_Update", phoneIDParameter, phoneNbrParameter, activeFlgParameter, primaryFlgParameter);
        }
    
        public virtual ObjectResult<sp_Vol_Phone_Insert_Result> sp_Vol_Phone_Insert(Nullable<System.Guid> volID, string phoneNbr, Nullable<bool> activeFlg, Nullable<bool> primaryFlg)
        {
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            var phoneNbrParameter = phoneNbr != null ?
                new ObjectParameter("PhoneNbr", phoneNbr) :
                new ObjectParameter("PhoneNbr", typeof(string));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            var primaryFlgParameter = primaryFlg.HasValue ?
                new ObjectParameter("PrimaryFlg", primaryFlg) :
                new ObjectParameter("PrimaryFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Vol_Phone_Insert_Result>("sp_Vol_Phone_Insert", volIDParameter, phoneNbrParameter, activeFlgParameter, primaryFlgParameter);
        }
    
        public virtual int sp_Vol_Phone_Delete(Nullable<int> phoneID, string phoneNbr, Nullable<bool> activeFlg)
        {
            var phoneIDParameter = phoneID.HasValue ?
                new ObjectParameter("PhoneID", phoneID) :
                new ObjectParameter("PhoneID", typeof(int));
    
            var phoneNbrParameter = phoneNbr != null ?
                new ObjectParameter("PhoneNbr", phoneNbr) :
                new ObjectParameter("PhoneNbr", typeof(string));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vol_Phone_Delete", phoneIDParameter, phoneNbrParameter, activeFlgParameter);
        }
    
        public virtual ObjectResult<sp_Vol_Phone_Select_Result> sp_Vol_Phone_Select(Nullable<System.Guid> volID, Nullable<int> phoneID, Nullable<bool> primaryFlg)
        {
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            var phoneIDParameter = phoneID.HasValue ?
                new ObjectParameter("PhoneID", phoneID) :
                new ObjectParameter("PhoneID", typeof(int));
    
            var primaryFlgParameter = primaryFlg.HasValue ?
                new ObjectParameter("PrimaryFlg", primaryFlg) :
                new ObjectParameter("PrimaryFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Vol_Phone_Select_Result>("sp_Vol_Phone_Select", volIDParameter, phoneIDParameter, primaryFlgParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_GroupVol_Insert(Nullable<int> groupID, Nullable<System.Guid> volID, Nullable<bool> primaryVolID, Nullable<bool> admin)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            var primaryVolIDParameter = primaryVolID.HasValue ?
                new ObjectParameter("PrimaryVolID", primaryVolID) :
                new ObjectParameter("PrimaryVolID", typeof(bool));
    
            var adminParameter = admin.HasValue ?
                new ObjectParameter("Admin", admin) :
                new ObjectParameter("Admin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_GroupVol_Insert", groupIDParameter, volIDParameter, primaryVolIDParameter, adminParameter);
        }
    
        public virtual int sp_GroupVol_Select(Nullable<int> groupID, Nullable<System.Guid> volID)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupVol_Select", groupIDParameter, volIDParameter);
        }
    
        public virtual int sp_GroupVol_Update(Nullable<int> groupID, Nullable<System.Guid> volID, Nullable<bool> primaryVolID, Nullable<bool> admin)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            var primaryVolIDParameter = primaryVolID.HasValue ?
                new ObjectParameter("PrimaryVolID", primaryVolID) :
                new ObjectParameter("PrimaryVolID", typeof(bool));
    
            var adminParameter = admin.HasValue ?
                new ObjectParameter("Admin", admin) :
                new ObjectParameter("Admin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupVol_Update", groupIDParameter, volIDParameter, primaryVolIDParameter, adminParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> sp_Vend_Contact_Insert(Nullable<System.Guid> vendorID, Nullable<System.Guid> contactID, Nullable<bool> primaryContact)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(System.Guid));
    
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(System.Guid));
    
            var primaryContactParameter = primaryContact.HasValue ?
                new ObjectParameter("PrimaryContact", primaryContact) :
                new ObjectParameter("PrimaryContact", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("sp_Vend_Contact_Insert", vendorIDParameter, contactIDParameter, primaryContactParameter);
        }
    
        public virtual ObjectResult<sp_Vend_Contact_Select_Result> sp_Vend_Contact_Select(Nullable<System.Guid> contactID)
        {
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Vend_Contact_Select_Result>("sp_Vend_Contact_Select", contactIDParameter);
        }
    
        public virtual int sp_Vend_Contact_Update(Nullable<System.Guid> vendorID, Nullable<System.Guid> contactID, Nullable<bool> primaryContact)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(System.Guid));
    
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(System.Guid));
    
            var primaryContactParameter = primaryContact.HasValue ?
                new ObjectParameter("PrimaryContact", primaryContact) :
                new ObjectParameter("PrimaryContact", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vend_Contact_Update", vendorIDParameter, contactIDParameter, primaryContactParameter);
        }
    
        public virtual int sp_Group_Delete(Nullable<int> groupID)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Group_Delete", groupIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Group_Insert(string groupName, Nullable<int> participationLevelID, Nullable<bool> activeFlg)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var participationLevelIDParameter = participationLevelID.HasValue ?
                new ObjectParameter("ParticipationLevelID", participationLevelID) :
                new ObjectParameter("ParticipationLevelID", typeof(int));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Group_Insert", groupNameParameter, participationLevelIDParameter, activeFlgParameter);
        }
    
        public virtual ObjectResult<sp_Group_Select_Result> sp_Group_Select(Nullable<int> groupID)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Group_Select_Result>("sp_Group_Select", groupIDParameter);
        }
    
        public virtual int sp_Group_Update(Nullable<int> groupID, string groupName, Nullable<int> participationLevelID, Nullable<bool> activeFlg)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var participationLevelIDParameter = participationLevelID.HasValue ?
                new ObjectParameter("ParticipationLevelID", participationLevelID) :
                new ObjectParameter("ParticipationLevelID", typeof(int));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Group_Update", groupIDParameter, groupNameParameter, participationLevelIDParameter, activeFlgParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> sp_Vendor_Insert(string vendorName)
        {
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("sp_Vendor_Insert", vendorNameParameter);
        }
    
        public virtual ObjectResult<Describe_CheckConstraints_Result> Describe_CheckConstraints()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Describe_CheckConstraints_Result>("Describe_CheckConstraints");
        }
    
        public virtual ObjectResult<Describe_TableColumns_Result> Describe_TableColumns()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Describe_TableColumns_Result>("Describe_TableColumns");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> sp_ProjectEvent_Insert(Nullable<System.Guid> eventID, Nullable<System.Guid> projectID, Nullable<System.DateTime> startDateTime, Nullable<System.DateTime> endDateTime, Nullable<int> addrID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(System.Guid));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(System.Guid));
    
            var startDateTimeParameter = startDateTime.HasValue ?
                new ObjectParameter("StartDateTime", startDateTime) :
                new ObjectParameter("StartDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("EndDateTime", endDateTime) :
                new ObjectParameter("EndDateTime", typeof(System.DateTime));
    
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("sp_ProjectEvent_Insert", eventIDParameter, projectIDParameter, startDateTimeParameter, endDateTimeParameter, addrIDParameter);
        }
    
        public virtual ObjectResult<sp_ProjectEvent_Select_Result> sp_ProjectEvent_Select(Nullable<System.Guid> eventID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProjectEvent_Select_Result>("sp_ProjectEvent_Select", eventIDParameter);
        }
    
        public virtual int sp_ProjectEvent_Update(ObjectParameter flag, Nullable<System.Guid> eventID, Nullable<System.Guid> projectID, Nullable<System.DateTime> startDateTime, Nullable<System.DateTime> endDateTime, Nullable<int> addrID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(System.Guid));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(System.Guid));
    
            var startDateTimeParameter = startDateTime.HasValue ?
                new ObjectParameter("StartDateTime", startDateTime) :
                new ObjectParameter("StartDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("EndDateTime", endDateTime) :
                new ObjectParameter("EndDateTime", typeof(System.DateTime));
    
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProjectEvent_Update", flag, eventIDParameter, projectIDParameter, startDateTimeParameter, endDateTimeParameter, addrIDParameter);
        }
    
        public virtual int sp_GroupAddr_Delete(Nullable<int> groupID, Nullable<int> addrID)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupAddr_Delete", groupIDParameter, addrIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_GroupAddr_Insert(Nullable<int> groupID, Nullable<int> addrID, Nullable<bool> primaryAddrID, Nullable<bool> activeFlg)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            var primaryAddrIDParameter = primaryAddrID.HasValue ?
                new ObjectParameter("PrimaryAddrID", primaryAddrID) :
                new ObjectParameter("PrimaryAddrID", typeof(bool));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_GroupAddr_Insert", groupIDParameter, addrIDParameter, primaryAddrIDParameter, activeFlgParameter);
        }
    
        public virtual ObjectResult<sp_GroupAddr_Select_Result> sp_GroupAddr_Select(Nullable<int> groupID, Nullable<int> addrID, Nullable<bool> primaryAddrID, Nullable<bool> activeFlg)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            var primaryAddrIDParameter = primaryAddrID.HasValue ?
                new ObjectParameter("PrimaryAddrID", primaryAddrID) :
                new ObjectParameter("PrimaryAddrID", typeof(bool));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupAddr_Select_Result>("sp_GroupAddr_Select", groupIDParameter, addrIDParameter, primaryAddrIDParameter, activeFlgParameter);
        }
    
        public virtual int sp_GroupAddr_Update(Nullable<int> groupID, Nullable<int> addrID, Nullable<bool> primaryAddrID, Nullable<bool> activeFlg)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            var primaryAddrIDParameter = primaryAddrID.HasValue ?
                new ObjectParameter("PrimaryAddrID", primaryAddrID) :
                new ObjectParameter("PrimaryAddrID", typeof(bool));
    
            var activeFlgParameter = activeFlg.HasValue ?
                new ObjectParameter("ActiveFlg", activeFlg) :
                new ObjectParameter("ActiveFlg", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupAddr_Update", groupIDParameter, addrIDParameter, primaryAddrIDParameter, activeFlgParameter);
        }
    
        public virtual int sp_GroupVol_Delete(Nullable<int> groupID, Nullable<System.Guid> volID)
        {
            var groupIDParameter = groupID.HasValue ?
                new ObjectParameter("GroupID", groupID) :
                new ObjectParameter("GroupID", typeof(int));
    
            var volIDParameter = volID.HasValue ?
                new ObjectParameter("VolID", volID) :
                new ObjectParameter("VolID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupVol_Delete", groupIDParameter, volIDParameter);
        }
    
        public virtual int sp_Vend_Email_Delete(Nullable<int> emailID)
        {
            var emailIDParameter = emailID.HasValue ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vend_Email_Delete", emailIDParameter);
        }
    
        public virtual int sp_Project_Update1(ObjectParameter flag, Nullable<System.Guid> projectID, string projectName, string projectDesc, Nullable<int> addrID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(System.Guid));
    
            var projectNameParameter = projectName != null ?
                new ObjectParameter("ProjectName", projectName) :
                new ObjectParameter("ProjectName", typeof(string));
    
            var projectDescParameter = projectDesc != null ?
                new ObjectParameter("ProjectDesc", projectDesc) :
                new ObjectParameter("ProjectDesc", typeof(string));
    
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Project_Update1", flag, projectIDParameter, projectNameParameter, projectDescParameter, addrIDParameter);
        }
    
        public virtual int sp_ProjectEvent_Delete(Nullable<System.Guid> eventID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProjectEvent_Delete", eventIDParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> sp_ProjectEvent_Insert1(Nullable<System.Guid> projectID, Nullable<System.DateTime> startDateTime, Nullable<System.DateTime> endDateTime, Nullable<int> addrID)
        {
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(System.Guid));
    
            var startDateTimeParameter = startDateTime.HasValue ?
                new ObjectParameter("StartDateTime", startDateTime) :
                new ObjectParameter("StartDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("EndDateTime", endDateTime) :
                new ObjectParameter("EndDateTime", typeof(System.DateTime));
    
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("sp_ProjectEvent_Insert1", projectIDParameter, startDateTimeParameter, endDateTimeParameter, addrIDParameter);
        }
    
        public virtual ObjectResult<sp_ProjectEvent_Select1_Result> sp_ProjectEvent_Select1(Nullable<System.Guid> eventID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProjectEvent_Select1_Result>("sp_ProjectEvent_Select1", eventIDParameter);
        }
    
        public virtual int sp_ProjectEvent_Update1(Nullable<System.Guid> eventID, Nullable<System.Guid> projectID, Nullable<System.DateTime> startDateTime, Nullable<System.DateTime> endDateTime, Nullable<int> addrID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(System.Guid));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(System.Guid));
    
            var startDateTimeParameter = startDateTime.HasValue ?
                new ObjectParameter("StartDateTime", startDateTime) :
                new ObjectParameter("StartDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("EndDateTime", endDateTime) :
                new ObjectParameter("EndDateTime", typeof(System.DateTime));
    
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProjectEvent_Update1", eventIDParameter, projectIDParameter, startDateTimeParameter, endDateTimeParameter, addrIDParameter);
        }
    
        public virtual int sp_ProjectEventContact_Delete(Nullable<System.Guid> eventID, Nullable<System.Guid> contactID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(System.Guid));
    
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProjectEventContact_Delete", eventIDParameter, contactIDParameter);
        }
    
        public virtual int sp_Vend_Contact_Delete(Nullable<System.Guid> vendorID, Nullable<System.Guid> contactID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(System.Guid));
    
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Vend_Contact_Delete", vendorIDParameter, contactIDParameter);
        }
    
        public virtual int sp_VendorProjContact_Delete(Nullable<System.Guid> vendorID, Nullable<System.Guid> projectID, Nullable<System.Guid> contactID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(System.Guid));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(System.Guid));
    
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorProjContact_Delete", vendorIDParameter, projectIDParameter, contactIDParameter);
        }
    
        public virtual int sp_VendorProjContact_Insert(Nullable<System.Guid> vendorID, Nullable<System.Guid> projectID, Nullable<System.Guid> contactID, Nullable<bool> primaryContact)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(System.Guid));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(System.Guid));
    
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(System.Guid));
    
            var primaryContactParameter = primaryContact.HasValue ?
                new ObjectParameter("PrimaryContact", primaryContact) :
                new ObjectParameter("PrimaryContact", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorProjContact_Insert", vendorIDParameter, projectIDParameter, contactIDParameter, primaryContactParameter);
        }
    
        public virtual ObjectResult<sp_VendorProjContact_Select_Result> sp_VendorProjContact_Select(Nullable<System.Guid> vendorID, Nullable<System.Guid> projectID, Nullable<System.Guid> contactID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(System.Guid));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(System.Guid));
    
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VendorProjContact_Select_Result>("sp_VendorProjContact_Select", vendorIDParameter, projectIDParameter, contactIDParameter);
        }
    
        public virtual int sp_VendorProjContact_Update(Nullable<System.Guid> vendorID, Nullable<System.Guid> projectID, Nullable<System.Guid> contactID, Nullable<bool> primaryContact)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(System.Guid));
    
            var projectIDParameter = projectID.HasValue ?
                new ObjectParameter("ProjectID", projectID) :
                new ObjectParameter("ProjectID", typeof(System.Guid));
    
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(System.Guid));
    
            var primaryContactParameter = primaryContact.HasValue ?
                new ObjectParameter("PrimaryContact", primaryContact) :
                new ObjectParameter("PrimaryContact", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorProjContact_Update", vendorIDParameter, projectIDParameter, contactIDParameter, primaryContactParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> sp_Vendor_Insert1(Nullable<System.Guid> vendorID, string vendorName)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(System.Guid));
    
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("sp_Vendor_Insert1", vendorIDParameter, vendorNameParameter);
        }
    
        public virtual int sp_VendorAddr_Delete(Nullable<System.Guid> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorAddr_Delete", vendorIDParameter);
        }
    
        public virtual ObjectResult<Nullable<System.Guid>> sp_VendorAddr_Insert(Nullable<int> addrID, Nullable<bool> hQ)
        {
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            var hQParameter = hQ.HasValue ?
                new ObjectParameter("HQ", hQ) :
                new ObjectParameter("HQ", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.Guid>>("sp_VendorAddr_Insert", addrIDParameter, hQParameter);
        }
    
        public virtual ObjectResult<sp_VendorAddr_Select_Result> sp_VendorAddr_Select(Nullable<System.Guid> vendorID)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_VendorAddr_Select_Result>("sp_VendorAddr_Select", vendorIDParameter);
        }
    
        public virtual int sp_VendorAddr_Update(Nullable<System.Guid> vendorID, Nullable<int> addrID, Nullable<bool> hQ)
        {
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(System.Guid));
    
            var addrIDParameter = addrID.HasValue ?
                new ObjectParameter("AddrID", addrID) :
                new ObjectParameter("AddrID", typeof(int));
    
            var hQParameter = hQ.HasValue ?
                new ObjectParameter("HQ", hQ) :
                new ObjectParameter("HQ", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_VendorAddr_Update", vendorIDParameter, addrIDParameter, hQParameter);
        }
    
        public virtual int sp_ProjectEventContact_Insert(Nullable<System.Guid> eventID, Nullable<System.Guid> contactID, Nullable<bool> primaryContact)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(System.Guid));
    
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(System.Guid));
    
            var primaryContactParameter = primaryContact.HasValue ?
                new ObjectParameter("PrimaryContact", primaryContact) :
                new ObjectParameter("PrimaryContact", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProjectEventContact_Insert", eventIDParameter, contactIDParameter, primaryContactParameter);
        }
    
        public virtual ObjectResult<sp_ProjectEventContact_Select_Result> sp_ProjectEventContact_Select(Nullable<System.Guid> eventID, Nullable<System.Guid> contactID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(System.Guid));
    
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProjectEventContact_Select_Result>("sp_ProjectEventContact_Select", eventIDParameter, contactIDParameter);
        }
    
        public virtual int sp_ProjectEventContact_Update(Nullable<System.Guid> eventID, Nullable<System.Guid> contactID, Nullable<bool> primaryContact)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(System.Guid));
    
            var contactIDParameter = contactID.HasValue ?
                new ObjectParameter("ContactID", contactID) :
                new ObjectParameter("ContactID", typeof(System.Guid));
    
            var primaryContactParameter = primaryContact.HasValue ?
                new ObjectParameter("PrimaryContact", primaryContact) :
                new ObjectParameter("PrimaryContact", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProjectEventContact_Update", eventIDParameter, contactIDParameter, primaryContactParameter);
        }
    }
}
